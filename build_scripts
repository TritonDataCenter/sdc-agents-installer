#!/bin/bash

if [[ $(uname -s) == 'Linux' ]]; then
    BUILD_SPEC="hvm.build.spec"
else
    BUILD_SPEC="build.spec"
fi
ROOT=$(cd $(dirname $0) ; pwd)
RELEASE_NAME=$(${ROOT}/json release-name < ${ROOT}/${BUILD_SPEC})
if [[ -z ${RELEASE_NAME} ]]; then
    # Use git branch name of repo
    RELEASE_NAME=$(cd ${ROOT} && git branch | grep "^* " | cut -d' ' -f2)
fi
if [[ -z ${RELEASE_NAME} ]]; then
    RELEASE_NAME="unknown"
fi
BUILDSTAMP=`TZ=UTC date "+%Y%m%dT%H%M%SZ"`; export BUILDSTAMP
FILENAME=agents-${RELEASE_NAME}-${BUILDSTAMP}.sh
MD5_FILE=agents-${RELEASE_NAME}-${BUILDSTAMP}.md5sum
TMP=/var/tmp
SHAR=./shar

if [[ $(uname -s) == 'Linux' ]]; then
    SHAR=/usr/bin/shar
fi

set -e

if [[ $(uname -s) != 'Linux' ]]; then
    # For Linux platform the ubuntu-live script updates
    # agents and we don't need the build_agents to do it.
    ./build_agents
fi

(cat <<__EOF__
#!/bin/sh
if [ \`pwd\` != '$TMP' ]; then
  cd $TMP
fi
__EOF__
)> $FILENAME

(${SHAR} -D -n "Joyent" agents | grep -v '^exit 0'; cat <<EOF

if [[ -f agents/install.sh ]]; then
    (cd agents && /bin/bash ./install.sh)
fi

# Delete agents directory.
rm -fr agents

exit 0
EOF
)>> $FILENAME

md5sum $FILENAME | cut -d' ' -f 1 > $MD5_FILE

if [ ! -z "$COAL_PUBLISH" ]; then
    if [[ -d /rpool/data/coal/live_147/ur-scripts ]]; then
        pfexec cp $MD5_FILE $FILENAME /rpool/data/coal/live_147/ur-scripts/
    fi
fi
