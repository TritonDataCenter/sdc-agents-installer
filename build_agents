#!/bin/bash

# Git clone and build each of the agents. Depends on passwordless access to the
# Joyent repos.

set -e
set -x

export CC=gcc

DIRNAME=`dirname $0`
ROOT=`cd $DIRNAME && pwd`
DEFAULT_CHECKOUT="origin/release-20110331"


build() {
    REPO=$1
    NAME=$2
    CHECKOUT=$3
    TARGET=$4
    TARBALL=$5
    OUTPUT=$6

    if [ -z "$NAME" ]; then
        NAME=$1
    fi

    if [ -z "$CHECKOUT" ]; then
        CHECKOUT=$DEFAULT_CHECKOUT
    fi

    if [ -z "$TARGET" ]; then
        TARGET=npm
    fi

    if [ -z "$TARBALL" ]; then
        TARBALL=$NAME.tgz
    fi

    if [ ! -d "$REPO" ]; then
    	git clone git@git.joyent.com:$REPO.git
    fi

    
    (cd $REPO && git fetch && git checkout $CHECKOUT)
    (cd $REPO && git submodule update --init)
    
    (cd $REPO && gmake $TARGET)
    cp $REPO/$TARBALL agents/$OUTPUT
}

num_agents=$(${ROOT}/json agents.length < ${ROOT}/build.spec)
if [[ -n ${num_agents} ]] && [[ ${num_agents} -lt 1 ]]; then
    echo "FATAL: no agents listed in ${ROOT}/build.spec"
    exit 1
fi

idx=0
while [[ ${idx} -lt ${num_agents} ]]; do
    repo=$(${ROOT}/json agents[${idx}].repo < ${ROOT}/build.spec)
    name=$(${ROOT}/json agents[${idx}].name < ${ROOT}/build.spec)
    checkout=$(${ROOT}/json agents[${idx}].checkout < ${ROOT}/build.spec)
    target=$(${ROOT}/json agents[${idx}].target < ${ROOT}/build.spec)
    tarball=$(${ROOT}/json agents[${idx}].tarball < ${ROOT}/build.spec)
    output=$(${ROOT}/json agents[${idx}].output < ${ROOT}/build.spec)

    if [[ -z ${repo} ]]; then
        data=$(${ROOT}/json agents[${idx}] < ${ROOT}/build.spec)
        echo "FATAL: could not include agent '${data}': no repo defined"
        exit 1
    fi

    build "${repo}" "${name}" "${checkout}" "${target}" "${tarball}" "${output}"

    idx=$((${idx} + 1))
done

exit 0
